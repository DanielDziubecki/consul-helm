{{- if .Values.controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "consul.fullname" . }}-controller-cert-manager
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "consul.name" . }}
      chart: {{ template "consul.chart" . }}
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      component: controller
  template:
    metadata:
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        component: controller
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s cert-manager \
          -secret-name=controller-webhook-cert \
          -secret-namespace=${NAMESPACE} \
          {{- if .Values.controller.certs.secretName }}
          -tls-cert-file=/etc/controller/certs/{{ .Values.controller.certs.certName }} \
          -tls-key-file=/etc/controller/certs/{{ .Values.controller.certs.keyName }} \
          {{- else }}
          -m-webhook-config-name={{ template "consul.fullname" . }}-controller-mutating-webhook-configuration \
          -dns-sans={{ template "consul.fullname" . }}-controller-webhook,{{ template "consul.fullname" . }}-controller-webhook.${NAMESPACE}.svc,{{ template "consul.fullname" . }}-controller-webhook.${NAMESPACE}.svc.cluster.local \
          {{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.global.imageK8S }}
        name: controller-cert-manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        {{- if .Values.controller.certs.secretName }}
        volumeMounts:
        - name: user-certs
          mountPath: /etc/controller/certs
          readOnly: true
        {{- end }}
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "consul.fullname" . }}-controller-cert-manager
      {{- if .Values.controller.certs.secretName }}
      volumes:
      - name: user-certs
        secret:
          secretName: {{ .Values.controller.certs.secretName }}
      {{- end }}

{{- end }}
